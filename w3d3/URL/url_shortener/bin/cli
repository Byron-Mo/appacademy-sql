puts "Email Login"
x = gets.chomp

this_user = User.find_by_email(x)
until this_user
  puts "User does not exist, input a valid email"
  x = gets.chomp
  this_user = User.find_by_email(x)
end

def valid?(input)
  input == 1 || input == 0
end

begin
  puts "What do you want to do?"
  puts "0. Create shortened URL"
  puts "1. Visit shortened URL"

  selection = Integer(gets.chomp)
  raise "nope" unless valid?(selection)
rescue
  retry
end

if selection == 0
  puts "Type in your long URL"
  url = gets.chomp
  ShortenedUrl.create_for_user_and_long_url!(this_user, url)
  shortened_url = ShortenedUrl.all.last.short_url

  puts "Short url is #{shortened_url}"
elsif selection == 1
  puts "Type in the shortened URL"
  short_url = gets.chomp
  long_url = ShortenedUrl.find_by_short_url(short_url).long_url
  puts "Launching #{long_url}.... JK"
end
